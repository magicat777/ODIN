apiVersion: v1
kind: ConfigMap
metadata:
  name: service-endpoint-alerts
  namespace: monitoring
data:
  service-endpoint-rules.yml: |
    groups:
    - name: service_endpoint_monitoring
      rules:
      - alert: ServiceHasNoEndpoints
        expr: |
          kube_service_info{namespace="monitoring"}
          unless on(service,namespace) 
          kube_endpoint_info{namespace="monitoring"}
        for: 5m
        labels:
          severity: warning
          component: service-discovery
        annotations:
          summary: "Service {{ $labels.service }} has no active endpoints"
          description: "Service {{ $labels.service }} in namespace {{ $labels.namespace }} has been without endpoints for more than 5 minutes"
          
      - alert: EndpointNotReady
        expr: |
          kube_endpoint_info{namespace="monitoring"} 
          unless on(endpoint,namespace) 
          kube_endpoint_ready{namespace="monitoring"}
        for: 2m
        labels:
          severity: warning
          component: service-discovery
        annotations:
          summary: "Endpoint {{ $labels.endpoint }} is not ready"
          description: "Endpoint {{ $labels.endpoint }} in service {{ $labels.service }} is not ready"
          
      - alert: PrometheusTargetMissing
        expr: |
          up{job=~"kubernetes-service-discovery"} == 0
        for: 3m
        labels:
          severity: warning
          component: prometheus
        annotations:
          summary: "Prometheus target {{ $labels.instance }} is down"
          description: "Prometheus target {{ $labels.instance }} from job {{ $labels.job }} has been down for more than 3 minutes"
          
      - alert: ServiceDiscoveryErrors
        expr: |
          rate(prometheus_sd_kubernetes_events_total{event="delete"}[5m]) > 
          rate(prometheus_sd_kubernetes_events_total{event="add"}[5m]) * 2
        for: 10m
        labels:
          severity: warning
          component: service-discovery
        annotations:
          summary: "High service discovery churn detected"
          description: "Kubernetes service discovery is showing high delete rate compared to add rate"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: update-prometheus-alerts
  namespace: monitoring
spec:
  template:
    spec:
      containers:
      - name: kubectl
        image: bitnami/kubectl:latest
        command: ["/bin/sh"]
        args:
          - -c
          - |
            kubectl patch configmap prometheus-config -n monitoring --type='merge' -p='{"data":{"alert_rules.yml":"$(cat <<EOF
            groups:
            - name: node_alerts
              rules:
              - alert: HighCPUUsage
                expr: 100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100) > 80
                for: 5m
                labels:
                  severity: warning
                annotations:
                  summary: \"High CPU usage detected\"
                  description: \"CPU usage is above 80% for more than 5 minutes\"
              
              - alert: HighMemoryUsage
                expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
                for: 5m
                labels:
                  severity: warning
                annotations:
                  summary: \"High memory usage detected\"
                  description: \"Memory usage is above 85% for more than 5 minutes\"
              
              - alert: DiskSpaceLow
                expr: 100 - ((node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes) > 90
                for: 5m
                labels:
                  severity: critical
                annotations:
                  summary: \"Disk space is critically low\"
                  description: \"Disk usage is above 90% on {{ \$labels.mountpoint }}\"
            
            - name: container_alerts
              rules:
              - alert: PodRestarting
                expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
                for: 5m
                labels:
                  severity: warning
                annotations:
                  summary: \"Pod is restarting frequently\"
                  description: \"Pod {{ \$labels.pod }} in namespace {{ \$labels.namespace }} is restarting\"
              
              - alert: PodNotReady
                expr: kube_pod_status_ready{condition=\"false\"} == 1
                for: 10m
                labels:
                  severity: warning
                annotations:
                  summary: \"Pod not ready\"
                  description: \"Pod {{ \$labels.pod }} in namespace {{ \$labels.namespace }} has been not ready for more than 10 minutes\"
              
              - alert: KubernetesMemoryPressure
                expr: kube_node_status_condition{condition=\"MemoryPressure\",status=\"true\"} == 1
                for: 2m
                labels:
                  severity: critical
                annotations:
                  summary: \"Kubernetes memory pressure\"
                  description: \"Node {{ \$labels.node }} has memory pressure\"
              
              - alert: KubernetesDiskPressure
                expr: kube_node_status_condition{condition=\"DiskPressure\",status=\"true\"} == 1
                for: 2m
                labels:
                  severity: critical
                annotations:
                  summary: \"Kubernetes disk pressure\"
                  description: \"Node {{ \$labels.node }} has disk pressure\"
            
            - name: service_endpoint_monitoring
              rules:
              - alert: ServiceHasNoEndpoints
                expr: |
                  kube_service_info{namespace=\"monitoring\"}
                  unless on(service,namespace) 
                  kube_endpoint_info{namespace=\"monitoring\"}
                for: 5m
                labels:
                  severity: warning
                  component: service-discovery
                annotations:
                  summary: \"Service {{ \$labels.service }} has no active endpoints\"
                  description: \"Service {{ \$labels.service }} in namespace {{ \$labels.namespace }} has been without endpoints for more than 5 minutes\"
                  
              - alert: EndpointNotReady
                expr: |
                  kube_endpoint_info{namespace=\"monitoring\"} 
                  unless on(endpoint,namespace) 
                  kube_endpoint_ready{namespace=\"monitoring\"}
                for: 2m
                labels:
                  severity: warning
                  component: service-discovery
                annotations:
                  summary: \"Endpoint {{ \$labels.endpoint }} is not ready\"
                  description: \"Endpoint {{ \$labels.endpoint }} in service {{ \$labels.service }} is not ready\"
                  
              - alert: PrometheusTargetMissing
                expr: up{job=~\"kubernetes-service-discovery\"} == 0
                for: 3m
                labels:
                  severity: warning
                  component: prometheus
                annotations:
                  summary: \"Prometheus target {{ \$labels.instance }} is down\"
                  description: \"Prometheus target {{ \$labels.instance }} from job {{ \$labels.job }} has been down for more than 3 minutes\"
            
            - name: monitoring_alerts
              rules:
              - alert: PrometheusTargetDown
                expr: up == 0
                for: 5m
                labels:
                  severity: warning
                annotations:
                  summary: \"Prometheus target down\"
                  description: \"Target {{ \$labels.job }} on {{ \$labels.instance }} is down\"
              
              - alert: PrometheusConfigReloadFailed
                expr: prometheus_config_last_reload_successful != 1
                for: 5m
                labels:
                  severity: warning
                annotations:
                  summary: \"Prometheus configuration reload failed\"
                  description: \"Prometheus configuration reload has failed\"
            EOF
            )"}}'
            echo "Prometheus config updated with service endpoint monitoring"
      restartPolicy: Never
      serviceAccountName: default
  backoffLimit: 3