apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring
data:
  alertmanager.yml: |
    global:
      smtp_smarthost: 'localhost:587'
      smtp_from: 'odin-alerts@localhost'
      resolve_timeout: 5m
    
    templates:
    - '/etc/alertmanager/templates/*.tmpl'
    
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 12h
      receiver: 'default'
      routes:
      - match:
          severity: critical
        receiver: 'critical-alerts'
        continue: false
      - match:
          severity: warning
        receiver: 'warning-alerts'
        continue: false
      - match:
          alertname: GPUHighTemperature
        receiver: 'gpu-alerts'
        continue: false
    
    receivers:
    - name: 'default'
      webhook_configs:
      - url: 'http://webhook-logger.monitoring.svc.cluster.local:8080/webhook'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'odin'
            password: 'monitoring'
    
    - name: 'critical-alerts'
      webhook_configs:
      - url: 'http://webhook-logger.monitoring.svc.cluster.local:8080/webhook/critical'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'odin'
            password: 'monitoring'
    
    - name: 'warning-alerts'
      webhook_configs:
      - url: 'http://webhook-logger.monitoring.svc.cluster.local:8080/webhook/warning'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'odin'
            password: 'monitoring'
    
    - name: 'gpu-alerts'
      webhook_configs:
      - url: 'http://webhook-logger.monitoring.svc.cluster.local:8080/webhook/gpu'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'odin'
            password: 'monitoring'
    
    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['alertname', 'instance']
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alertmanager-pvc
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: prom/alertmanager:v0.25.0
        args:
          - '--config.file=/etc/alertmanager/alertmanager.yml'
          - '--storage.path=/alertmanager'
          - '--web.external-url=http://localhost:9093'
        ports:
        - containerPort: 9093
        volumeMounts:
        - name: config
          mountPath: /etc/alertmanager
        - name: storage
          mountPath: /alertmanager
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: config
        configMap:
          name: alertmanager-config
      - name: storage
        persistentVolumeClaim:
          claimName: alertmanager-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  selector:
    app: alertmanager
  ports:
  - name: web
    port: 9093
    targetPort: 9093
  type: ClusterIP