apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus/'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
        - '--web.enable-lifecycle'
        - '--storage.tsdb.retention.time=30d'
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-storage
          mountPath: /prometheus
        - name: gpu-alerts
          mountPath: /etc/prometheus/rules/gpu
        - name: power-exporter-alerts
          mountPath: /etc/prometheus/rules/power-exporter
        - name: claude-code-alerts
          mountPath: /etc/prometheus/rules/claude-code
        - name: k3s-alerts
          mountPath: /etc/prometheus/rules/k3s
        - name: odin-stack-alerts
          mountPath: /etc/prometheus/rules/odin-stack
        - name: anomaly-alerts
          mountPath: /etc/prometheus/rules/anomaly
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-pvc
      - name: gpu-alerts
        configMap:
          name: gpu-alert-rules
      - name: power-exporter-alerts
        configMap:
          name: power-exporter-alert-rules
      - name: claude-code-alerts
        configMap:
          name: claude-code-alert-rules
      - name: k3s-alerts
        configMap:
          name: k3s-alert-rules
      - name: odin-stack-alerts
        configMap:
          name: odin-stack-alert-rules
      - name: anomaly-alerts
        configMap:
          name: anomaly-alert-rules
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  type: NodePort
  ports:
  - port: 9090
    targetPort: 9090
    nodePort: 31493
  selector:
    app: prometheus