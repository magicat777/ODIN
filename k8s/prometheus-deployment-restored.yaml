apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: local-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.40.0
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.enable-lifecycle'
          - '--storage.tsdb.retention.time=90d'
          - '--storage.tsdb.retention.size=40GB'
          - '--storage.tsdb.wal-compression'
          - '--web.enable-admin-api'
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: gpu-alert-rules
          mountPath: /etc/prometheus/rules/gpu
        - name: power-exporter-alert-rules
          mountPath: /etc/prometheus/rules/power-exporter
        - name: claude-code-alert-rules
          mountPath: /etc/prometheus/rules/claude-code
        - name: k3s-alert-rules
          mountPath: /etc/prometheus/rules/k3s
        - name: odin-stack-alert-rules
          mountPath: /etc/prometheus/rules/odin-stack
        - name: anomaly-alert-rules
          mountPath: /etc/prometheus/rules/anomaly
        - name: service-endpoint-alerts
          mountPath: /etc/prometheus/rules/service-endpoint
        - name: sli-slo-rules
          mountPath: /etc/prometheus/rules/sli-slo
        - name: storage
          mountPath: /prometheus
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 4
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: prometheus-config
      - name: gpu-alert-rules
        configMap:
          name: gpu-alert-rules
      - name: power-exporter-alert-rules
        configMap:
          name: power-exporter-alert-rules
      - name: claude-code-alert-rules
        configMap:
          name: claude-code-alert-rules
      - name: k3s-alert-rules
        configMap:
          name: k3s-alert-rules
      - name: odin-stack-alert-rules
        configMap:
          name: odin-stack-alert-rules
      - name: anomaly-alert-rules
        configMap:
          name: anomaly-alert-rules
      - name: service-endpoint-alerts
        configMap:
          name: service-endpoint-alerts
      - name: sli-slo-rules
        configMap:
          name: sli-slo-rules
      - name: storage
        persistentVolumeClaim:
          claimName: prometheus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  selector:
    app: prometheus
  ports:
  - name: web
    port: 9090
    targetPort: 9090
    nodePort: 31493
  type: NodePort